import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class UserDAO {
    private Connection conn;

    public UserDAO(Connection conn) {
        this.conn = conn;
    }

    public void createUser(User user) throws SQLException {
        String query = "INSERT INTO users (name, email, password) VALUES (?, ?, ?)";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, user.getName());
        pstmt.setString(2, user.getEmail());
        pstmt.setString(3, user.getPassword());
        pstmt.executeUpdate();
    }

    public User getUserByEmail(String email) throws SQLException {
        String query = "SELECT * FROM users WHERE email = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, email);
        ResultSet rs = pstmt.executeQuery();
        if (rs.next()) {
            User user = new User(rs.getInt("id"), rs.getString("name"), rs.getString("email"), rs.getString("password"));
            return user;
        }
        return null;
    }

    public User getUserById(int id) throws SQLException {
        String query = "SELECT * FROM users WHERE id = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, id);
        ResultSet rs = pstmt.executeQuery();
        if (rs.next()) {
            User user = new User(rs.getInt("id"), rs.getString("name"), rs.getString("email"), rs.getString("password"));
            return user;
        }
        return null;
    }

    public void updateUser(User user) throws SQLException {
        String query = "UPDATE users SET name = ?, email = ?, password = ? WHERE id = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, user.getName());
        pstmt.setString(2, user.getEmail());
        pstmt.setString(3, user.getPassword());
        pstmt.setInt(4, user.getId());
        pstmt.executeUpdate();
    }

    public void deleteUser(int id) throws SQLException {
        String query = "DELETE FROM users WHERE id = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, id);
        pstmt.executeUpdate();
    }
}

public class NutritionDAO {
    private Connection conn;

    public NutritionDAO(Connection conn) {
        this.conn = conn;
    }

    public void createNutritionEntry(Nutrition nutrition) throws SQLException {
        String query = "INSERT INTO nutrition (user_id, food_name, calories) VALUES (?, ?, ?)";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, nutrition.getUserId());
        pstmt.setString(2, nutrition.getFoodName());
        pstmt.setInt(3, nutrition.getCalories());
        pstmt.executeUpdate();
    }

    public Nutrition getNutritionEntryById(int id) throws SQLException {
        String query = "SELECT * FROM nutrition WHERE id = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, id);
        ResultSet rs = pstmt.executeQuery();
        if (rs.next()) {
            Nutrition nutrition = new Nutrition(rs.getInt("id"), rs.getInt("user_id"), rs.getString("food_name"), rs.getInt("calories"));
            return nutrition;
        }
        return null;
    }

    public List<Nutrition> getNutritionEntriesByUser(int userId) throws SQLException {
        String query = "SELECT * FROM nutrition WHERE user_id = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, userId);
        ResultSet rs = pstmt.executeQuery();
        List<Nutrition> nutritionEntries = new ArrayList<>();
        while (rs.next()) {
            Nutrition nutrition = new Nutrition(rs.getInt("id"), rs.getInt("user_id"), rs.getString("food_name"), rs.getInt("calories"));
            nutritionEntries.add(nutrition);
        }
        return nutritionEntries;
    }

    public void updateNutritionEntry(Nutrition nutrition) throws SQLException {
        String query = "UPDATE nutrition SET food_name = ?, calories = ? WHERE id = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, nutrition.getFoodName());
        pstmt.setInt(2, nutrition.getCalories());
        pstmt.setInt(3, nutrition.getId());
        pstmt.executeUpdate();
    }

    public void deleteNutritionEntry(int id) throws SQLException {
        String query = "DELETE FROM nutrition WHERE id = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, id);
        pstmt.executeUpdate();
    }
}
